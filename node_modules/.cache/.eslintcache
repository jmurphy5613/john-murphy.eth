[{"/Users/johnmurphy/Documents/Mac-Programming/john-murphy.eth/src/index.tsx":"1","/Users/johnmurphy/Documents/Mac-Programming/john-murphy.eth/src/reportWebVitals.ts":"2","/Users/johnmurphy/Documents/Mac-Programming/john-murphy.eth/src/App.tsx":"3","/Users/johnmurphy/Documents/Mac-Programming/john-murphy.eth/src/threejs/three.scene.js":"4"},{"size":554,"mtime":1652970966101,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1652970966102,"results":"7","hashOfConfig":"6"},{"size":2025,"mtime":1655936457785,"results":"8","hashOfConfig":"6"},{"size":1769,"mtime":1653160899158,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1fnbibz",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johnmurphy/Documents/Mac-Programming/john-murphy.eth/src/index.tsx",[],[],[],"/Users/johnmurphy/Documents/Mac-Programming/john-murphy.eth/src/reportWebVitals.ts",[],[],"/Users/johnmurphy/Documents/Mac-Programming/john-murphy.eth/src/App.tsx",["24","25","26"],[],"import './App.css';\nimport ThreeScene from './threejs/three.scene';\nimport Typed from 'react-typed';\nimport { useState } from 'react';\nimport Popup from 'reactjs-popup';\n\nfunction App() {\n\n  const [page, setPage] = useState('home');\n\n  if(page == 'web3projects') {\n    return (\n      <div className=\"App\">\n        <ThreeScene />\n        <img src=\"/github.png\" className=\"github\" />\n        <div className=\"main-content\">\n          <h4 className=\"back\" onClick={e => setPage('home')}>{`<- Home`}</h4>\n          <h1>\n            <h3 className=\"projects-title\">Web3 Projects</h3>\n            <Popup modal trigger={\n              <div className=\"project-container\" style={{ backgroundImage: 'url(/azol.png)' }}>\n                <div className=\"overlay\">\n                  <h3>Azol.io</h3>\n                </div>\n              </div>\n            }>\n            </Popup>\n\n            <Popup modal trigger={\n              <div className=\"project-container\" style={{ backgroundImage: 'url(/bb.png)' }}>\n                <div className=\"overlay\">\n                  <h3>Billionaire Battles</h3>\n                </div>\n              </div>\n            }>\n            </Popup>\n          </h1>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <ThreeScene />\n      <a href=\"https://github.com/jmurphy5613\">\n        <img src=\"/github.png\" className=\"github\" />\n      </a>\n\n      <div className=\"main-content\">\n        <h1>\n          <h3>\n            Hey there, I'm John.\n          </h3>\n          I'm a passionate \n          <Typed style={{ margin: '0 0 1rem 0'  }} typeSpeed={90} backSpeed={50} backDelay={10} loop strings={['full stack developer', 'web3 engineer', 'blockchain developer']} />\n          <h4>I'm currently a developer at Landkit, a software company that creates algorithmic solutions to landscaping projects</h4>\n          <button className=\"projects-button\" onClick={e => { setPage('web3projects') }}>View Projects</button>\n        </h1>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/johnmurphy/Documents/Mac-Programming/john-murphy.eth/src/threejs/three.scene.js",[],[],{"ruleId":"27","severity":1,"message":"28","line":11,"column":11,"nodeType":"29","messageId":"30","endLine":11,"endColumn":13},{"ruleId":"31","severity":1,"message":"32","line":15,"column":9,"nodeType":"33","endLine":15,"endColumn":53},{"ruleId":"31","severity":1,"message":"32","line":47,"column":9,"nodeType":"33","endLine":47,"endColumn":53},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]